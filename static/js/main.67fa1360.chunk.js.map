{"version":3,"sources":["components/TransactionHistory/TransactionHistory.module.css","components/Controls/Controls.module.css","components/services/storage.js","components/Controls/Controls.jsx","components/Balance/Balance.jsx","components/TransactionHistory/TransactionHistory.jsx","components/Dashboard/Dashboard.jsx","components/App/App.js","index.js","components/Balance/Balance.module.css"],"names":["module","exports","key","value","localStorage","setItem","JSON","stringify","err","console","log","transactions","getItem","parse","Controls","state","amount","handleChangeInput","e","setState","currentTarget","hendleDeposit","props","onDeposit","hendleWithdraw","onWithdraw","this","className","style","controls","input","type","name","onChange","button","onClick","Component","Balance","expenses","income","balance","span","defaultProps","TransactionHistory","hystory","transaction","firstRow","columnTitle","map","item","id","row","column","date","Dashboard","historyBalance","notifyBalance","toast","notifyNotBalance","notifyNegativeBalance","createTransaction","shortid","generate","Number","Date","now","toLocaleString","handleDeposit","obj","tmpTransaction","processTransaction","handleWithdraw","newTransactions","newBalance","onBalanceOrWithdraw","bal","reduce","acc","curent","loadTransactions","storage","prevState","length","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.67fa1360.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction\":\"TransactionHistory_transaction__3BBdz\",\"firstRow\":\"TransactionHistory_firstRow__To8lc\",\"columnTitle\":\"TransactionHistory_columnTitle__3TP77\",\"row\":\"TransactionHistory_row__2nxBy\",\"column\":\"TransactionHistory_column__1vjRr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__19vOo\",\"input\":\"Controls_input__2P1Dk\",\"button\":\"Controls_button__2Bi_F\"};","const set = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst get = key => {\n  try {\n    const transactions = localStorage.getItem(key);\n    return transactions ? JSON.parse(transactions) : null;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n};\n\nexport default {\n  set,\n  get,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './Controls.module.css';\n\nexport default class Controls extends Component {\n  static propTypes = {\n    onDeposit: PropTypes.func.isRequired,\n    onWithdraw: PropTypes.func.isRequired,\n  };\n\n  state = {\n    amount: 0,\n  };\n\n  handleChangeInput = e => {\n    this.setState({\n      amount: e.currentTarget.value,\n    });\n  };\n\n  hendleDeposit = () => {\n    this.props.onDeposit(this.state.amount);\n    this.setState({ amount: 0 });\n  };\n\n  hendleWithdraw = () => {\n    this.props.onWithdraw(this.state.amount);\n    this.setState({ amount: 0 });\n  };\n\n  render() {\n    const { amount } = this.state;\n    return (\n      <section className={style.controls}>\n        <input\n          className={style.input}\n          type=\"number\"\n          name=\"amount\"\n          value={ amount === 0 ? '' : amount}\n          onChange={this.handleChangeInput}\n        />\n        <button\n          className={style.button}\n          type=\"button\"\n          onClick={this.hendleDeposit}\n        >\n          Deposit\n        </button>\n        <button\n          className={style.button}\n          type=\"button\"\n          onClick={this.hendleWithdraw}\n        >\n          Withdraw\n        </button>\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport T from 'prop-types';\nimport style from './Balance.module.css';\n\nconst Balance = ({ expenses, income, balance }) => (\n  <section className={style.balance}>\n    <span className={style.span}>️{income}$</span>\n    <span className={style.span}>️{expenses}$</span>\n    <span className={style.span}>Balance: {balance}$</span>\n  </section>\n);\n\nBalance.propTypes = {\n  expenses: T.number,\n  income: T.number,\n  balance: T.number,\n};\n\nBalance.defaultProps = {\n  expenses: 0,\n  income: 0,\n  balance: 0,\n};\n\nexport default Balance;\n","import React from 'react';\nimport T from 'prop-types';\nimport style from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ hystory }) => (\n  <table className={style.transaction}>\n    <thead className={style.firstRow}>\n      <tr>\n        <th className={style.columnTitle}>Transaction</th>\n        <th className={style.columnTitle}>Amount</th>\n        <th className={style.columnTitle}>Date</th>\n      </tr>\n    </thead>\n    <tbody>\n      {hystory.map(item => (\n        <tr key={item.id} className={style.row}>\n          <td className={style.column}>{item.type}</td>\n          <td className={style.column}>{item.amount}$</td>\n          <td className={style.column}>{item.date}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  hystory: T.arrayOf(\n    T.shape({\n      id: T.string.isRequired,\n      type: T.string.isRequired,\n      amount: T.number.isRequired,\n      date: T.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport storage from '../services/storage';\nimport Controls from '../Controls';\nimport Balance from '../Balance';\nimport TransactionHistory from '../TransactionHistory';\n\nexport default class Dashboard extends Component {\n  static propTypes = {\n    transactions: PropTypes.arrayOf(PropTypes.object),\n    balance: PropTypes.number,\n  };\n\n  static defaultProps = {\n    transactions: [],\n    balance: 0,\n  };\n\n  state = {\n    transactions: this.props.transactions,\n    balance: this.props.balance,\n  };\n\n  historyBalance = {\n    expenses: 0,\n    income: 0,\n    balance: 0,\n  };\n\n  componentDidMount() {\n    const loadTransactions = storage.get('transactions');\n    if (loadTransactions) {\n      this.onBalanceOrWithdraw(\n        loadTransactions.transactions,\n        loadTransactions.balance,\n      );\n      this.setState(() => ({\n        transactions: loadTransactions.transactions,\n        balance: loadTransactions.balance,\n      }));\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    const { transactions, balance } = this.state;\n\n    if (prevState.transaction !== transactions) {\n      storage.set('transactions', { transactions, balance });\n    }\n  }\n\n  notifyBalance = () => toast('Введите сумму для проведения операции!');\n\n  notifyNotBalance = () =>\n    toast('На счету недостаточно средств для проведения операции!');\n    \n  notifyNegativeBalance = () =>\n    toast('Введён отрицательный баланс попробуйте снова');\n\n  createTransaction = (amount, type) => {\n    if(amount<0){\n      this.notifyNegativeBalance();\n      return null;\n    }\n    if (amount === 0) {\n      this.notifyBalance();\n      return null;\n    }\n\n    if (type === 'expenses') {\n      if (amount > this.state.balance) {\n        this.notifyNotBalance();\n        return null;\n      }\n    }\n\n    return {\n      id: shortid.generate(),\n      type,\n      amount: Number(amount),\n      date: new Date(Date.now()).toLocaleString(),\n    };\n  };\n\n  handleDeposit = obj => {\n    const tmpTransaction = this.createTransaction(obj, 'income');\n    if (tmpTransaction) {\n      this.processTransaction(tmpTransaction, tmpTransaction.amount);\n    }\n  };\n\n  handleWithdraw = obj => {\n    const tmpTransaction = this.createTransaction(obj, 'expenses');\n    if (tmpTransaction) {\n      this.processTransaction(tmpTransaction, -tmpTransaction.amount);\n    }\n  };\n\n  processTransaction = (transaction, amount) => {\n    const { transactions, balance } = this.state;\n    const newTransactions = [...transactions, transaction];\n    const newBalance = balance + amount;\n    this.onBalanceOrWithdraw(newTransactions, newBalance);\n\n    this.setState(() => ({\n      transactions: newTransactions,\n      balance: newBalance,\n    }));\n  };\n\n  onBalanceOrWithdraw = (transactions, bal) => {\n    this.historyBalance = transactions.reduce(\n      (acc, curent) => {\n        return {\n          ...acc,\n          [curent.type]: curent.amount + acc[curent.type],\n        };\n      },\n      { expenses: 0, income: 0, balance: bal },\n    );\n  };\n\n  render() {\n    const { transactions } = this.state;\n    const { expenses, income, balance } = this.historyBalance;\n    return (\n      <div className=\"dashboard\">\n        <Controls\n          onDeposit={this.handleDeposit}\n          onWithdraw={this.handleWithdraw}\n        />\n        <Balance expenses={expenses} income={income} balance={balance} />\n        {transactions.length > 0 && (\n          <TransactionHistory hystory={transactions} />\n        )}\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Dashboard from '../Dashboard';\n\nconst App = () => (\n  <div className=\"App\">\n    <Dashboard />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__1dzc4\",\"span\":\"Balance_span__3a_WI\"};"],"sourceRoot":""}